/* eslint no-unused-vars : 0 */
import appConfig from './config/app.json';
import mapsConfig from './config/maps.json';

import PixiMapRenderer from './renderer/PixiMapRenderer';

import ElevationMap from './maps/elevationMap';

import { oahuTheme, grayscaleTheme, temperatureTheme, precipitationTheme } from './themes';

console.info('FINISTERRA - 2D World generated by noise functions and renderered with Pixi.js');
const app = new PixiMapRenderer(appConfig.canvas, appConfig.renderer, appConfig.map);

const heightMap = new ElevationMap(appConfig.map, mapsConfig.elevation);

// console.info('GENERATE TEMPERATURE MAP');

// const generateTemperatureMap = (dimensions, noiseConfig, heightMap) => {
//   const rngGenerator = new MersenneTwister();
//   const simplexNoise = new SimplexNoise(rngGenerator.random());

//   // south to north gradient
//   const southToNorthGradient = generateSouthToNorthGradient(
//     dimensions,
//     0,
//     dimensions.width,
//     -1.0,
//     1.0,
//   );

//   // organic noise
//   const organicNoise = organicNoiseGenerator(simplexNoise, noiseConfig.organicNoise, dimensions);

//   // combine both noises
//   const rawTemperature = combineMaps(
//     dimensions,
//     southToNorthGradient,
//     organicNoise,
//     noiseConfig.combineMaps.weight,
//   );

//   // colder at highlands and warmer in the lowlands
//   const temperatureMap = [];
//   for (let i = 0; i < dimensions.width; i++) {
//     temperatureMap[i] = [];
//     for (let j = 0; j < dimensions.height; j++) {
//       const t = rawTemperature[i][j];
//       const h = heightMap[i][j];
//       let value = t;

//       if (h > 0.0) {
//         value -= (h - noiseConfig.temperatureMap.offset) * noiseConfig.temperatureMap.multiplier;
//       }
//       temperatureMap[i][j] = value;
//     }
//   }

//   return temperatureMap;
// };

// const temperatureMap = generateTemperatureMap(config.map, temperatureMapConfig, elevationMap);

// console.info('GENERATE PRECIPITATION MAP');

// const generatePrecipitationMap = (dimensions, noiseConfig, heightMap, heatMap) => {
//   const rngGenerator = new MersenneTwister();
//   const simplexNoise = new SimplexNoise(rngGenerator.random());

//   // south to north gradient
//   const northToSouthGradient = generateNorthToSouthGradient(
//     dimensions,
//     0,
//     dimensions.width,
//     -1.0,
//     1.0,
//   );

//   // organic noise
//   const organicNoise = organicNoiseGenerator(simplexNoise, noiseConfig.organicNoise, dimensions);

//   // combine both noises
//   const rawPrecipitation = combineMaps(
//     dimensions,
//     northToSouthGradient,
//     organicNoise,
//     noiseConfig.combineMaps.weight,
//   );

//   // colder at highlands and warmer in the lowlands
//   const precipitationMap = [];
//   for (let i = 0; i < dimensions.width; i++) {
//     precipitationMap[i] = [];
//     for (let j = 0; j < dimensions.height; j++) {
//       const t = rawPrecipitation[i][j];
//       const h = heightMap[i][j];
//       let value = t;

//       if (h > 0.0) {
//         value -=
//           (h - noiseConfig.precipitationMap.offset) * noiseConfig.precipitationMap.multiplier;
//       }
//       precipitationMap[i][j] = value;
//     }
//   }

//   return precipitationMap;
// };

// const precipitationMap =
// generatePrecipitationMap(config.map, precipitationMapConfig, elevationMap);

console.info('***** Render Maps *****');
app.renderNoiseMap(heightMap.map, heightMap.theme, heightMap.name);
// app.renderNoiseMap(temperatureMap, temperatureTheme, 'temperature');
// app.renderNoiseMap(precipitationMap, precipitationTheme, 'precipitation');
